/******************************************************
一根高筋拉面，中间切一刀，可以得到2根面条。
如果先对折1次，中间切一刀，可以得到3根面条。
如果连续对折2次，中间切一刀，可以得到5根面条。
那么，连续对折10次，中间切一刀，会得到多少面条呢？
*******************************************************
算法思想：
	面条数符合f[n] = power(2,n)+1，只要根据规律，推算对
折10次后面条数的项数即可。对折0次，f[0],对折1次,f[1]，
可知，对折10次，就是f[10]，最终输出f[10]即可。
******************************************************/
#include<stdio.h>
int power(int m,int n)
{	//整数幂函数
	int f;
	if( n==0 )
		f = 1;
	else if( n==1 )
		f = m;
	else
		f = m*power(m,n-1);
	return f;
}
int main()
{
	int n;

	printf("设置对折次数：\n");
	scanf("%d",&n);
	
	//以下输出最终结果
	printf("对折%d次，中间切一刀，会得到",n);
	printf("%d根面条 \n",power(2,n)+1);
	return 0;
}